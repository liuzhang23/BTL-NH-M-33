# BTL-QuanLySinhVien-Nhom33
#include<conio.h>
#include <iostream>
#include <string>

using namespace std;

class Person{
	private:
		string Name, Date, Address, Sex;
	public:
		Person();
		~Person();
		string getName();
		void InputPerson();
		virtual void Output();
};
Person::Person(){
	Name = "";
	Date = "";
	Address = "";
	Sex = "";
}
Person::~Person(){
	Name = "";
	Date = "";
	Address = "";
	Sex = "";
}
string Person::getName(){
	return Name;
}
void Person::InputPerson(){
	cout<<"\tName: "; fflush(stdin); getline(cin,Name);
	cout<<"\tSex: "; fflush(stdin); getline(cin,Sex);
	cout<<"\tDate: "; fflush(stdin); getline(cin,Date);
	cout<<"\tAddress: ";fflush(stdin); getline(cin,Address);
	
}
void Person::Output(){
	cout<<"\t\t"<<Name<<"\t\t"<<Sex<<"\t\t"<<Date<<"\t\t"<<Address<<"\t\t";
}

class Student:public Person{
	private:
		string Code, Class;
		float Score;
	public:
		Student();
		~Student();
		string getCode();
		float getScore();
		string getClass();
		void InputStudent();
		void Output();
};
Student::Student(){
	Code = "";
	Class = "";
	Score = 0;
}
Student::~Student(){
	Code = "";
	Class = "";
	Score = 0;
}
string Student::getCode(){
	return Code;
}
float Student::getScore(){
	return Score;
}
string Student::getClass(){
	return Class;
}
void Student::InputStudent(){
	Person::InputPerson();
	cout<<"\tCode: "; fflush(stdin); getline(cin,Code);
	cout<<"\tClass: "; fflush(stdin); getline(cin,Class);
	cout<<"\tmedium score: "; cin>>Score;
}
void Student::Output(){
	Person::Output();
	cout<<Code<<"\t\t"<<Class<<"\t\t"<<Score<<"\t\t";
}

class Consultant:public Person{
	private:
		Consultant *C;int s;
		int Lesson;
		string PhoneNumber, Charge;;
	public:
		Consultant();
		~Consultant();
		void InputConsultant();
		void Output();
};
Consultant::Consultant(){
	Lesson = 0;
	PhoneNumber = "";
	Charge = "";
}
Consultant::~Consultant(){
	Lesson = 0;
	PhoneNumber = "";
	Charge = "";
}
void Consultant::InputConsultant(){
	Person::InputPerson();
	cout<<"\tCharge of class: "; fflush(stdin); getline(cin,Charge);
	cout<<"\tLesson: "; cin>>Lesson;
	cout<<"\tPhone number: "; fflush(stdin); getline(cin,PhoneNumber);
}
void Consultant::Output(){
	Person::Output();
	cout<<Lesson<<"\t\t"<<PhoneNumber<<"\t\t\t"<<Charge<<"\t\t";
}

class Manage{
	private:
		Student *STD;
		Consultant *C;
		int Size, Size2;
	public:
		Manage();
		Manage(int m);
		~Manage();
		void InputList();
		void OutputList();
		void Add();
		void Search();
		void Sort();
		void Delete();
};
Manage::Manage(){
	C = NULL;
	STD = NULL;
	Size = 0;
	Size2 = 0;
}
Manage::Manage(int m){
	STD = new Student [m];
	C = new Consultant [m];
	Size = 0;
	Size2 = 0;
}
Manage::~Manage(){
	delete [] STD;
	delete [] C;
	Size = 0;
	Size2 = 0;
}
void Manage::InputList(){
	
	cout<<"\n\t\t\t\t********************************************";
   	cout<<"\n\t\t\t\t**             INPUT LIST                 **";
  	cout<<"\n\t\t\t\t**                                        **";
  	cout<<"\n\t\t\t\t**  1. Student information                **";
    cout<<"\n\t\t\t\t**  2. Consultant information             **";
	cout<<"\n\t\t\t\t**                                        **";
    cout<<"\n\t\t\t\t********************************************";
    int chooseInput;
    int n, NumberConsultant;
    cout<<"\n\tEnter your selection: "; cin>>chooseInput;
    switch(chooseInput){
    	case 1:
			cout<<"Enter the number of students: "; cin>>n;
			cout<<endl;
			STD = new Student [n];
			for(int i=0; i<n; i++){
				cout<<"\n\tEnter information of student "<<i+1<<":"<<endl;
				STD[i].InputStudent();
				Size++;
			}
			break;
		case 2:
			cout<<"Enter the number of consultant: "; cin>>NumberConsultant;
			cout<<endl;
			C = new Consultant[NumberConsultant];
			for(int i=0; i<NumberConsultant; i++){
				cout<<"\n\tEnter information of consultant "<<i+1<<": "<<endl;
				C[i].InputConsultant();
				Size2++;
			}
	}
}
void Manage::OutputList(){
	
	cout<<"\n\t\t\t\t********************************************";
   	cout<<"\n\t\t\t\t**                DISPLAY                 **";
  	cout<<"\n\t\t\t\t**                                        **";
  	cout<<"\n\t\t\t\t**  1. Student information                **";
    cout<<"\n\t\t\t\t**  2. Consultant information             **";
	cout<<"\n\t\t\t\t**                                        **";
    cout<<"\n\t\t\t\t********************************************";
	int chooseDisplay;
	string EnterClass;
	cout<<"\n\tEnter your selection: "; cin>>chooseDisplay;
	switch(chooseDisplay){
		case 1:
			cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
			for(int i=0; i<Size; i++){
				cout<<"\t"<<i+1;
				STD[i].Output();
				cout<<endl;
			}
			break;
		case 2:
			cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tLesson"<<"\t\tPhoneNumber"<<"\t\tCharge"<<endl;
			for(int i=0; i<Size2; i++){				
				cout<<"\t"<<i+1;
				C[i].Output();
				cout<<endl;
			}		
			break;
	}
}
void Manage::Search(){
	cout<<"\n\t\t\t\t********************************************";
   	cout<<"\n\t\t\t\t**           FUNCTION SEARCH              **";
  	cout<<"\n\t\t\t\t**                                        **";
  	cout<<"\n\t\t\t\t**  1. By name                            **";
    cout<<"\n\t\t\t\t**  2. By code                            **";
	cout<<"\n\t\t\t\t**                                        **";
    cout<<"\n\t\t\t\t********************************************";
	int chooseSearch;
	string Find1, Find2;
	cout<<"\n\tEnter your selection: "; cin>>chooseSearch;
	switch(chooseSearch){
	case 1:
		cout<<"\nYou have selected the search function by name...\n"<<endl;
		cout<<"\n\tEnter name of student: "; fflush(stdin); getline (cin,Find1);
		cout<<"\n\t___Student found___\n"<<endl;
    	cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
    	for (int i=0; i<Size; i++){
   			if (Find1 == STD[i].getName()){
				cout<<"\t"<<i+1;
				STD[i].Output();
				cout<<endl;
			}
		}
		break;
							
	case 2:
		cout<<"\nYou have selected the search function by code...\n"<<endl;
		cout<<"\n\tEnter code of student: "; fflush(stdin); getline (cin,Find2);
		cout<<"\n\t___Student found___\n"<<endl;
		cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
		for (int i=0; i<Size; i++){
    		if (Find2 == STD[i].getCode()){
				cout<<"\t"<<i+1;
				STD[i].Output();
				cout<<endl;
			}
		}
		break;
	default:
		cout<<"\nThis function is not available! Please choose again!!!"<<endl;
		break;
	}
}
void Manage::Sort(){
	cout<<"\n\t\t\t\t********************************************";
   	cout<<"\n\t\t\t\t**           FUNCTION SORT                **";
  	cout<<"\n\t\t\t\t**                                        **";
	cout<<"\n\t\t\t\t**  1. By name                            **";
	cout<<"\n\t\t\t\t**  2. By code                            **";
	cout<<"\n\t\t\t\t**  3. by medium score                    **";
	cout<<"\n\t\t\t\t**                                        **";
    cout<<"\n\t\t\t\t********************************************";
	int chooseSort;
	cout<<"\n\tEnter your selection: "; cin>>chooseSort;
	switch(chooseSort){		
		case 1:
			cout<<"\nYou have selected the function to sort by name...\n"<<endl;
			cout<<"\n\t\t\t\t********************************************";
   			cout<<"\n\t\t\t\t**               TYPE SORT                **";
  			cout<<"\n\t\t\t\t**                                        **";
	  		cout<<"\n\t\t\t\t**       1. A - Z                         **";
	  		cout<<"\n\t\t\t\t**       2. Z - A                         **";
	  		cout<<"\n\t\t\t\t**                                        **";
      		cout<<"\n\t\t\t\t********************************************";
      		int TypeSort;
      		cout<<"\n\tEnter your selection: "; cin>>TypeSort; cout<<endl;
			switch(TypeSort){
				case 1:
					for(int i=0; i<Size-1; i++){
    					for(int j=i+1; j<Size; j++){
    						if (STD[i].getName() > STD[j].getName()){
    							Student temp = STD[i];
    							STD[i] = STD[j];
    							STD[j] = temp;
							}
						}
					}
					cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
					for (int i=0; i<Size; i++){
						cout<<"\t"<<i+1;
						STD[i].Output();
						cout<<endl;
					}					
					break;
				case 2:
					for(int i=0; i<Size-1; i++){
    					for(int j=i+1; j<Size; j++){
    						if (STD[i].getName() < STD[j].getName()){
    							Student temp = STD[i];
    							STD[i] = STD[j];
    							STD[j] = temp;
							}
						}
					}
					cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
					for (int i=0; i<Size; i++){
						cout<<"\t"<<i+1;
						STD[i].Output();
						cout<<endl;
					}
					break;
				default:
					cout<<"\nThis program is not available!!!"<<endl;
					break;
			}
			cout<<"\nPress any key to return to the menu...\n";
			getch();
			break;			
		case 2:
			cout<<"\nYou have selected the function to sort by code...\n"<<endl;
			cout<<"\n\t\t\t\t********************************************";
   			cout<<"\n\t\t\t\t**               TYPE SORT                **";
  			cout<<"\n\t\t\t\t**                                        **";
	  		cout<<"\n\t\t\t\t**       1. A - Z                         **";
	  		cout<<"\n\t\t\t\t**       2. Z - A                         **";
	  		cout<<"\n\t\t\t\t**                                        **";
      		cout<<"\n\t\t\t\t********************************************";
      		int TypeSort2;
      		cout<<"\n\tEnter your selection: "; cin>>TypeSort2; cout<<endl;
			switch(TypeSort2){
				case 1:
					for(int i=0; i<Size-1; i++){
    					for(int j=i+1; j<Size; j++){
    						if (STD[i].getCode() > STD[j].getCode()){
    							Student temp = STD[i];
    							STD[i] = STD[j];
    							STD[j] = temp;
    							cout<<endl;
							}
						}
					}
					cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
					for (int i=0; i<Size; i++){
						cout<<"\t"<<i+1;
						STD[i].Output();
						cout<<endl;
					}
					break;
				case 2:
					for(int i=0; i<Size-1; i++){
    					for(int j=i+1; j<Size; j++){
    						if (STD[i].getCode() < STD[j].getCode()){
    							Student temp = STD[i];
    							STD[i] = STD[j];
    							STD[j] = temp;
    							cout<<endl;
							}
						}
					}
					cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
					for (int i=0; i<Size; i++){
						cout<<"\t"<<i+1;
						STD[i].Output();
						cout<<endl;
					}
					break;
				default:
					cout<<"\nThis program is not available!!!"<<endl;
					break;
			}
    		cout<<"\nPress any key to return to the menu...\n";
			getch();
			break;			
		case 3:
			cout<<"\nYou have selected the function to sort by score...\n"<<endl;
			cout<<"\n\t\t\t\t********************************************";
   			cout<<"\n\t\t\t\t**               TYPE SORT                **";
  			cout<<"\n\t\t\t\t**                                        **";
	  		cout<<"\n\t\t\t\t**       1. A - Z                         **";
	  		cout<<"\n\t\t\t\t**       2. Z - A                         **";
	  		cout<<"\n\t\t\t\t**                                        **";
      		cout<<"\n\t\t\t\t********************************************";
      		int TypeSort3;
      		cout<<"\n\tEnter your selection: "; cin>>TypeSort3; cout<<endl;
			switch(TypeSort3){
				case 1:
					for(int i=0; i<Size-1; i++){
    					for(int j=i+1; j<Size; j++){
    						if (STD[i].getScore () > STD[j].getScore () ){
    							Student temp = STD[i];
    							STD[i] = STD[j];
    							STD[j] = temp;
							}
						}
					}
					cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
					for (int i=0; i<Size; i++){
						cout<<"\t"<<i+1;
						STD[i].Output();
						cout<<endl;
					}
					break;
				case 2:
					for(int i=0; i<Size-1; i++){
    					for(int j=i+1; j<Size; j++){
    						if (STD[i].getScore () < STD[j].getScore () ){
    							Student temp = STD[i];
    							STD[i] = STD[j];
    							STD[j] = temp;
							}
						}
					}
					cout<<"\tSTT"<<"\t\tName"<<"\t\tSex"<<"\t\tDate"<<"\t\tAddress"<<"\t\tCode"<<"\t\tClass"<<"\t\tScore"<<endl;
					for (int i=0; i<Size; i++){
						cout<<"\t"<<i+1;
						STD[i].Output();
						cout<<endl;
					}
					break;
				default:
					cout<<"\nThis program is not available!!!"<<endl;
					break;	
			}
    		cout<<"\nPress any key to return to the menu...\n";
			getch();
			break;
		default:
			cout<<"\nThis function is not available! Please choose again!!!"<<endl;
			break;
				
	}
}
void Manage::Add(){
	int Num;
	cout<<"\nEnter the number of students to add: "; cin>>Num;
    Student *Temp = new Student [Size];
    for (int i=0; i<Size; i++){
    		Temp[i] = STD[i];
	}
	STD = new Student [Size*2+Num];
	for (int i=0; i<Size; i++){
    	STD[i] = Temp[i];
	}
	for(int i=0; i<Num; i++){
		cout<<"\n\tAdd information of student "<<Size+1<<":"<<endl;
		STD[Size].InputStudent();
		Size++;
	}  				
    cout<<"\nSuccessfully added."<<endl;
    delete [] Temp;
}
void Manage::Delete(){
	string Erase;
	int Num2;
	cout<<"\nEnter the number of students to delete: "; cin>>Num2;
	for(int i=0; i<Num2; i++){
		cout<<"\n\tEnter code of student: "; fflush(stdin); getline (cin,Erase);
		for (int i=0; i<Size; i++){
    		if (Erase == STD[i].getCode()){
    			for (; i<Size-1; i++){
    				for(int j=i+1; j<Size; j++){
    					STD[i] = STD[j];
					}
				}
			}
		}
		cout<<"\nSuccessfully deleted."<<endl;
		Size = Size - 1;
	}
}

void Menu(){
	Manage M;
	while(true){
		cout<<"\n\t\t\t\t*********************************************************";
    	cout<<"\n\t\t\t\t**              STUDENT MANAGEMENT PROGRAM             **";
    	cout<<"\n\t\t\t\t**                                                     **";
    	cout<<"\n\t\t\t\t**  1. Enter student list                              **";
    	cout<<"\n\t\t\t\t**  2. Show list                                       **";
   		cout<<"\n\t\t\t\t**  3. Search student                                  **";
    	cout<<"\n\t\t\t\t**  4. Sort student                                    **";
    	cout<<"\n\t\t\t\t**  5. Add student                                     **";
    	cout<<"\n\t\t\t\t**  6. Delete student                                  **";
    	cout<<"\n\t\t\t\t**  0. Exit                                            **";
    	cout<<"\n\t\t\t\t**                                                     **";
    	cout<<"\n\t\t\t\t*********************************************************";
    	int choose;   	
    	cout<<"\n\tEnter your selection: "; cin>>choose;
    	switch(choose){
    		case 1:
    			cout<<"\nYou have selected the add list function...\n"<<endl;
    			M.InputList();
    			cout<<"\nSuccessfully entered."<<endl;				
				cout<<"\nPress any key to return to the menu...\n";
				getch();
				break;
			case 2:
				cout<<"\nYou have selected the list display function..."<<endl<<endl;
				M.OutputList();
				cout<<"\nPress any key to return to the menu...\n";
				getch();
				break;
			case 3:
				cout<<"\nYou have selected the search function..."<<endl;
				M.Search();
				cout<<"\nPress any key to return to the menu...\n";
				getch();
				break;
			case 4:
				cout<<"\nYou have selected the sort function..."<<endl;
				M.Sort();
				break;
			case 5:
				cout<<"\nYou have selected the function to add students..."<<endl;
				M.Add();
				cout<<"\nPress any key to return to the menu...\n";
				getch();
				break;
			case 6:
				cout<<"\nYou have selected the delete student function..."<<endl;
				M.Delete();
				cout<<"\nPress any key to return to the menu...\n";
				getch();
				break;
			case 0:
				cout<<"\nYou have selected an exit program!!!"<<endl;
				return ;
			default:
				cout<<"\nThis program is not available! Please choose again!!!"<<endl;
				cout<<"\nPress any key to return to the menu.\n";
				getch();
				break;		
		}
	}
}

int main(){
	system("color A");
	Menu();
}
